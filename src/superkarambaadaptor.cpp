/*
 * This file was generated by dbusidl2cpp version 0.6
 * Command line was: dbusidl2cpp -m -a superkarambaadaptor -- org.kde.superkaramba.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "superkarambaadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class SuperkarambaAdaptor
 */

SuperkarambaAdaptor::SuperkarambaAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

SuperkarambaAdaptor::~SuperkarambaAdaptor()
{
    // destructor
}

void SuperkarambaAdaptor::closeTheme(const QString &file)
{
    // handle method call org.kde.superkaramba.closeTheme
    QMetaObject::invokeMethod(parent(), "closeTheme", Q_ARG(QString, file));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->closeTheme(file);
}

void SuperkarambaAdaptor::hideSystemTray(bool hide)
{
    // handle method call org.kde.superkaramba.hideSystemTray
    QMetaObject::invokeMethod(parent(), "hideSystemTray", Q_ARG(bool, hide));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->hideSystemTray(hide);
}

bool SuperkarambaAdaptor::isMainKaramba()
{
    // handle method call org.kde.superkaramba.isMainKaramba
    bool out0;
    QMetaObject::invokeMethod(parent(), "isMainKaramba", Q_RETURN_ARG(bool, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->isMainKaramba();
    return out0;
}

void SuperkarambaAdaptor::openTheme(const QString &file)
{
    // handle method call org.kde.superkaramba.openTheme
    QMetaObject::invokeMethod(parent(), "openTheme", Q_ARG(QString, file));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->openTheme(file);
}

void SuperkarambaAdaptor::quit()
{
    // handle method call org.kde.superkaramba.quit
    QMetaObject::invokeMethod(parent(), "quit");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->quit();
}

void SuperkarambaAdaptor::showThemeDialog()
{
    // handle method call org.kde.superkaramba.showThemeDialog
    QMetaObject::invokeMethod(parent(), "showThemeDialog");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->showThemeDialog();
}

void SuperkarambaAdaptor::themeAdded(bool appId, bool file, int instance)
{
    // handle method call org.kde.superkaramba.themeAdded
    QMetaObject::invokeMethod(parent(), "themeAdded", Q_ARG(bool, appId), Q_ARG(bool, file), Q_ARG(int, instance));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->themeAdded(appId, file, instance);
}

void SuperkarambaAdaptor::themeAdded(bool appId, bool file)
{
    // handle method call org.kde.superkaramba.themeAdded
    QMetaObject::invokeMethod(parent(), "themeAdded", Q_ARG(bool, appId), Q_ARG(bool, file));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->themeAdded(appId, file);
}


#include "superkarambaadaptor.moc"
