#MIN_CONFIG

AM_INIT_AUTOMAKE(superkaramba, 0.37)
AC_C_BIGENDIAN
AC_CHECK_KDEMAXPATHLEN

dnl AM_PATH_XMMS([1.0.0])
dnl AC_PATH_PROG(XMMS_CONFIG, xmms-config, no)
dnl AM_PATH_XMMS(1.0.0,,AC_MSG_ERROR([*** XMMS >= 1.0.0 not installed - please install first ***]))

AC_DEFUN([AC_CHECK_XMMS],
[
  AC_MSG_CHECKING([for libxmms])
  AC_CACHE_VAL(ac_cv_have_xmms,
  [
    ac_save_libs="$LIBS"
    LIBS="`xmms-config --libs`"
    ac_CPPFLAGS_save="$CPPFLAGS"
    CPPFLAGS="$CPPFLAGS $all_includes `xmms-config --cflags`"
    ac_LDFLAGS_save="$LDFLAGS"
    LDFLAGS="$LDFLAGS $all_libraries"
    AC_TRY_LINK(
      [#include <xmms/xmmsctrl.h>],
      [xmms_remote_stop(0);],
      [ac_cv_have_xmms="yes"],
      [ac_cv_have_xmms="no"]
    )
    LIBS="$ac_save_libs"
    LDFLAGS="$ac_LDFLAGS_save"
    CPPFLAGS="$ac_CPPFLAGS_save"
  ])
  AC_MSG_RESULT($ac_cv_have_xmms)
  if test "$ac_cv_have_xmms" = "yes"; then
    XMMS_LDADD="`xmms-config --libs`"
    XMMS_INCLUDES="`xmms-config --cflags`"
    AC_DEFINE(HAVE_XMMS, 1, [Define if you have xmms libraries and header files.])
  fi
])

KDE_CHECK_PYTHON
AC_CHECK_XMMS
AC_SUBST(XMMS_LDADD)
AC_SUBST(XMMS_INCLUDES)

AC_CHECK_LIB(kvm, main, [LIBKVM="-lkvm"])
AC_SUBST(LIBKVM)
if test -z "$PYTHONINC" ; then
        DO_NOT_COMPILE="$DO_NOT_COMPILE superkaramba"
fi
